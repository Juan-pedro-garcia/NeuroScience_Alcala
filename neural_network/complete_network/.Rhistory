source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
volt
size
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
maximos
final
View(final)
circuito
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
tiempo <- 15
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
volt
source("~/GitHub/NeuroScience_Alcala/neural_network/complete_network/generador.R", echo=TRUE)
volt
if(any(volt>30)){
disp <- which(volt>30)
DR <-c((lim+1):size)[which(c((lim+1):size)%in%disp)]
DI <- c(1:(lim))[which(c(1:(lim))%in%disp)]
DA <- which(disp%in%list_aferentes)
contador[disp,1] <-contador[disp,1]+ delays[disp]
contador[disp,2] <- contador[disp,2]+1
volt[disp]<- d[disp]
reg[DI]=reg[DI]+d[DI]
reg[DA] <- -13
for (k in 1:length(disp)) {
sim_short[[disp[k]]] <- c(sim_short[[disp[k]]], (j+i/1000))
grupocorto[[grupo_tag[disp[k]]]] <- c(grupocorto[[grupo_tag[disp[k]]]],(j+i/1000))
if (!disp[k]%in%burst) {
sim_short_con_2 <- c(sim_short_con_2,j+i/1000)
}
if (!disp[k]%in%list_aferentes) {sim_short_con <- c(sim_short_con,j+i/1000)}
}
disp <- c()
}
reg
d
59+4+7+26+9+12+6+2
d
volt
disp <- 121
d[disp]
volt[disp]
c
